apiVersion: v1
kind: ConfigMap
metadata:
  name: linux-administración-usuarios-lab-es
  namespace: girus
  labels:
    app: girus-lab-template
data:
  lab.yaml: |
    name: linux-administración-usuarios-es
    title: "Administración de Usuarios y Grupos en Linux"
    description: "Aprende los fundamentos de administración de identidades en Linux, incluyendo creación y configuración de cuentas de usuarios, grupos, permisos de acceso y políticas de contraseñas. Este laboratorio guiado presenta conceptos esenciales para administradores de sistemas, explorando los archivos del sistema relacionados y comandos fundamentales para administrar usuarios y grupos de forma eficiente y segura."
    duration: 25m
    image: "linuxtips/girus-devops:0.1"
    tasks:
      - name: "Fundamentos del Sistema de Usuarios en Linux"
        description: "Comprende cómo Linux gestiona usuarios, grupos y autenticación a través de los archivos del sistema."
        steps:
          - "**Arquitectura de Administración de Usuarios en Linux**"
          - "Linux es un sistema multiusuario diseñado para permitir que varios usuarios compartan recursos del sistema de forma segura y aislada. La administración de identidades en Linux se basa en tres conceptos fundamentales:"
          - "1. **Usuarios**: Entidades que pueden acceder al sistema y poseer archivos"
          - "2. **Grupos**: Colecciones de usuarios que comparten permisos"
          - "3. **Permisos**: Controles de acceso para archivos y recursos"
          - "**Archivos Principales de Administración de Usuarios:**"
          - "- **/etc/passwd**: Almacena información básica de los usuarios"
          - "- **/etc/shadow**: Almacena contraseñas cifradas de los usuarios"
          - "- **/etc/group**: Almacena información sobre grupos"
          - "- **/etc/gshadow**: Almacena información sensible sobre grupos"
          - "- **/etc/login.defs**: Define políticas de contraseñas y configuraciones de cuentas"
          - "- **/etc/skel/**: Directorio que contiene archivos que se copian al directorio home de nuevos usuarios"
          - "**Estructura del archivo /etc/passwd:**"
          - "Vamos a examinar el archivo '/etc/passwd' que contiene información de usuarios. Cada línea representa un usuario y posee siete campos separados por dos puntos (:):"
          - "`cat /etc/passwd | head -5`"
          - "El formato es: `nombre_usuario:contraseña:UID:GID:comentario:directorio_home:shell`"
          - "- **nombre_usuario**: Nombre de la cuenta del usuario"
          - "- **contraseña**: Históricamente contenía la contraseña cifrada, ahora contiene 'x' indicando que la contraseña está en /etc/shadow"
          - "- **UID**: User ID, identificador numérico único del usuario (0 para root, 1-999 generalmente para usuarios de sistema, 1000+ para usuarios regulares)"
          - "- **GID**: Group ID, identificador numérico del grupo principal del usuario"
          - "- **comentario**: Información descriptiva sobre el usuario (nombre completo, departamento, etc.)"
          - "- **directorio_home**: Directorio inicial del usuario"
          - "- **shell**: Shell predeterminado del usuario"
          - "**Tipos de Usuarios**"
          - "Linux distingue entre diferentes tipos de usuarios:"
          - "- **Root (UID 0)**: El superusuario con todos los privilegios administrativos"
          - "- **Usuarios de Sistema (UID 1-999)**: Usuarios no humanos usados para ejecutar servicios y daemons"
          - "- **Usuarios Regulares (UID 1000+)**: Cuentas para usuarios humanos"
          - "Vamos a visualizar información sobre algunos usuarios específicos:"
          - "`grep root /etc/passwd`  # Superusuario"
          - "`grep ^daemon /etc/passwd`  # Ejemplo de usuario de sistema"
          - "**Información sobre Usuario Actual**"
          - "El comando `id` muestra detalles sobre el usuario actual o un usuario específico:"
          - "`id`"
          - "Verás el UID (ID del usuario), GID (ID del grupo principal) y la lista de grupos a los cuales el usuario pertenece."
        tips:
          - type: "info"
            title: "Bases de Datos Alternativas"
            content: "Además de los archivos locales, Linux puede utilizar otros mecanismos para autenticación y administración de usuarios, como LDAP, Active Directory, NIS, o Kerberos para ambientes de red mayores."
          - type: "warning"
            title: "Seguridad de los archivos"
            content: "Los archivos /etc/shadow y /etc/gshadow son accesibles apenas por el usuario root para proteger las contraseñas. Nunca modifiques directamente estos archivos; siempre usa las herramientas apropiadas como passwd, useradd, usermod, etc."
          - type: "tip"
            title: "Usuarios Especiales"
            content: "Además del root, existen otros usuarios especiales como nobody (usado para ejecutar servicios con privilegios mínimos) y varios usuarios de sistema específicos para servicios."
        validation:
          - command: "grep -q root /etc/passwd && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "No fue posible acceder a la información de usuario en /etc/passwd."
          - command: "id | grep -q uid && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "El comando 'id' no está funcionando correctamente."

      - name: "Creando y Gestionando Usuarios"
        description: "Aprende a crear, modificar y remover cuentas de usuarios utilizando las herramientas de línea de comandos apropiadas."
        steps:
          - "**Creando un Nuevo Usuario**"
          - "El comando `useradd` es usado para crear nuevas cuentas de usuario. Vamos a explorar su uso y opciones:"
          - "Crea un usuario básico llamado 'testuser':"
          - "`sudo useradd testuser`"
          - "Este comando crea un usuario con configuraciones predeterminadas definidas en /etc/default/useradd y /etc/login.defs."
          - "**Opciones comunes de useradd:**"
          - "- `-m`: Crea el directorio home (en algunas distribuciones, es el comportamiento predeterminado)"
          - "- `-d /ruta`: Especifica un directorio home personalizado"
          - "- `-s /ruta/para/shell`: Define el shell predeterminado"
          - "- `-c \"comentario\"`: Agrega un comentario (generalmente el nombre completo)"
          - "- `-g grupo`: Define el grupo principal"
          - "- `-G grupo1,grupo2`: Agrega a grupos secundarios"
          - "- `-e YYYY-MM-DD`: Define fecha de expiración de la cuenta"
          - "**Definiendo una Contraseña**"
          - "Después de crear un usuario, es necesario definir una contraseña usando el comando `passwd`:"
          - "`sudo passwd testuser`"
          - "El sistema solicitará la nueva contraseña dos veces. Por razones de seguridad, los caracteres digitados no serán mostrados."
          - "**Políticas de Contraseñas**"
          - "Linux posee reglas para garantizar contraseñas fuertes, definidas en /etc/login.defs e implementadas por módulos PAM (Pluggable Authentication Modules). Estas reglas generalmente incluyen:"
          - "- Longitud mínima de la contraseña"
          - "- Complejidad (letras mayúsculas, minúsculas, números, caracteres especiales)"
          - "- Historial (impedir reuso de contraseñas anteriores)"
          - "- Edad mínima y máxima de la contraseña"
          - "**Visualizando Información del Usuario**"
          - "Para ver detalles sobre el usuario creado:"
          - "`id testuser`"
          - "Para ver entradas específicas en el archivo passwd:"
          - "`grep testuser /etc/passwd`"
          - "**Modificando Usuarios Existentes**"
          - "El comando `usermod` permite modificar cuentas de usuario existentes. Algunas operaciones comunes:"
          - "Alterar el shell predeterminado para bash:"
          - "`sudo usermod -s /bin/bash testuser`"
          - "Agregar un comentario (generalmente el nombre completo):"
          - "`sudo usermod -c \"Usuario de Prueba\" testuser`"
          - "Alterar el directorio home (no mueve los archivos):"
          - "`sudo usermod -d /home/newhome testuser`"
          - "Expirar la contraseña forzando el cambio en el próximo login:"
          - "`sudo passwd -e testuser`"
          - "Bloquear/desbloquear una cuenta:"
          - "`sudo passwd -l testuser`  # bloquea"
          - "`sudo passwd -u testuser`  # desbloquea"
          - "**Removiendo Usuarios**"
          - "El comando `userdel` remueve cuentas de usuario:"
          - "`sudo userdel testuser`  # Remueve la cuenta, pero mantiene el directorio home"
          - "`sudo userdel -r testuser`  # Remueve la cuenta y el directorio home"
          - "**Alterando tu Propia Contraseña**"
          - "Los usuarios comunes pueden alterar sus propias contraseñas con:"
          - "`passwd`"
          - "El sistema solicitará la contraseña actual y después la nueva contraseña dos veces."
        tips:
          - type: "info"
            title: "Comandos Alternativos"
            content: "Algunas distribuciones Linux ofrecen comandos de más alto nivel como 'adduser' (en vez de useradd) que son interactivos y más amigables, solicitando información como contraseña y comentarios durante la creación."
          - type: "warning"
            title: "Seguridad y Directrices"
            content: "Mantén una política clara sobre creación y remoción de usuarios. Para usuarios temporales, define siempre una fecha de expiración con 'usermod -e'. Remueve cuentas no utilizadas para reducir la superficie de ataque."
          - type: "tip"
            title: "Deshabilitando Login"
            content: "Para cuentas de sistema que no necesitan hacer login interactivo, define el shell como '/sbin/nologin' o '/bin/false' para impedir accesos."
        validation:
          - command: "id testuser &> /dev/null && echo 'Usuario existe' || echo 'Usuario no existe'"
            expectedOutput: "Usuario existe"
            errorMessage: "El usuario testuser no fue creado correctamente."
          - command: "grep \"Usuario de Prueba\" /etc/passwd | wc -l"
            expectedOutput: "1"
            errorMessage: "El comentario no fue agregado correctamente al usuario."
      
      - name: "Administración de Grupos"
        description: "Aprende a crear, modificar y administrar grupos, entendiendo cómo funcionan para control de acceso en Linux."
        steps:
          - "**Concepto y Funcionamiento de Grupos**"
          - "Los grupos en Linux son utilizados para organizar usuarios y simplificar la administración de permisos. En lugar de asignar permisos a cada usuario individualmente, puedes asignarlos a un grupo y después agregar usuarios a ese grupo."
          - "**Tipos de Grupos:**"
          - "- **Grupo Primario**: Cada usuario pertenece a un grupo primario (definido en /etc/passwd)"
          - "- **Grupos Secundarios**: Los usuarios pueden pertenecer a múltiples grupos secundarios (definidos en /etc/group)"
          - "**Visualizando Información de Grupos**"
          - "El archivo /etc/group contiene las definiciones de grupos en el sistema:"
          - "`cat /etc/group | head -10`"
          - "Cada línea posee cuatro campos separados por dos puntos: `nombre_grupo:contraseña:GID:miembros`"
          - "- **nombre_grupo**: Nombre del grupo"
          - "- **contraseña**: Raramente usada, generalmente contiene 'x' indicando que la contraseña está en /etc/gshadow"
          - "- **GID**: Group ID, identificador numérico único del grupo"
          - "- **miembros**: Lista separada por comas de los usuarios que pertenecen al grupo como secundario"
          - "Para ver los grupos a los cuales un usuario pertenece:"
          - "`groups`  # para el usuario actual"
          - "`groups testuser`  # para un usuario específico"
          - "**Creando Nuevos Grupos**"
          - "El comando `groupadd` crea nuevos grupos:"
          - "`sudo groupadd proyecto`"
          - "Opciones comunes de groupadd:"
          - "- `-g GID`: Especifica un GID particular"
          - "- `-r`: Crea un grupo de sistema (con GID bajo)"
          - "**Agregando Usuarios a Grupos**"
          - "Existen varias maneras de agregar usuarios a grupos:"
          - "1. Usando `usermod` (para usuarios existentes):"
          - "`sudo usermod -aG proyecto testuser`"
          - "La opción `-a` (append) es crucial - ¡sin ella, el usuario será removido de todos los grupos no listados!"
          - "2. Al crear el usuario con `useradd`:"
          - "`sudo useradd -G proyecto colaborador`"
          - "3. Usando el comando `gpasswd`:"
          - "`sudo gpasswd -a testuser proyecto`"
          - "**Definiendo una Contraseña para el Nuevo Usuario**"
          - "`sudo passwd colaborador`"
          - "**Removiendo Usuarios de Grupos**"
          - "Para remover un usuario de un grupo:"
          - "`sudo gpasswd -d testuser proyecto`"
          - "o"
          - "`sudo deluser testuser proyecto`  # en algunas distribuciones"
          - "**Alterando el Grupo Primario de un Usuario**"
          - "Para cambiar el grupo primario de un usuario:"
          - "`sudo usermod -g proyecto testuser`"
          - "**Modificando y Removiendo Grupos**"
          - "Para alterar el nombre de un grupo:"
          - "`sudo groupmod -n nuevo_nombre antiguo_nombre`"
          - "Para remover un grupo:"
          - "`sudo groupdel proyecto`"
          - "Nota que no puedes remover el grupo primario de un usuario existente."
          - "**Listando Miembros de un Grupo**"
          - "Para listar todos los miembros de un grupo específico:"
          - "`getent group proyecto`"
          - "o"
          - "`grep proyecto /etc/group`"
        tips:
          - type: "info"
            title: "Grupos Especiales"
            content: "Algunos grupos tienen significados especiales en Linux: 'wheel' o 'sudo' (acceso administrativo vía sudo), 'audio' (acceso a dispositivos de audio), 'video' (acceso a dispositivos gráficos), 'docker' (acceso al daemon Docker), etc."
          - type: "tip"
            title: "Privacidad entre Usuarios"
            content: "Para crear grupos donde los usuarios no pueden acceder a archivos de otros, considera usar el comando 'chmod g+s' en el directorio compartido, combinado con umask restrictivo."
          - type: "warning"
            title: "Efecto de Alteraciones"
            content: "Las alteraciones en grupos generalmente no afectan sesiones ya existentes. Los usuarios necesitan hacer logout y login nuevamente, o usar el comando 'newgrp' para activar la participación en un nuevo grupo en la sesión actual."
        validation:
          - command: "grep proyecto /etc/group | wc -l"
            expectedOutput: "1"
            errorMessage: "El grupo 'proyecto' no fue creado correctamente."
          - command: "groups testuser | grep -q proyecto && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "El usuario 'testuser' no fue agregado al grupo 'proyecto'."

      - name: "Casos de Uso Prácticos y Mejores Prácticas"
        description: "Aplica el conocimiento adquirido en escenarios reales y conoce las mejores prácticas de administración de usuarios y grupos."
        steps:
          - "**Escenario 1: Creando un Grupo de Proyecto y Configurando Acceso Compartido**"
          - "Un escenario común es crear un espacio compartido para un equipo trabajando en el mismo proyecto:"
          - "1. Crear un grupo para el proyecto:"
          - "`sudo groupadd proyecto_web`"
          - "2. Crear un directorio compartido:"
          - "`sudo mkdir -p /proyectos/web`"
          - "3. Definir el grupo propietario del directorio:"
          - "`sudo chgrp proyecto_web /proyectos/web`"
          - "4. Configurar permisos para colaboración:"
          - "`sudo chmod 2775 /proyectos/web`"
          - "El bit SGID (2) garantiza que nuevos archivos creados hereden el grupo del directorio."
          - "5. Agregar usuarios al grupo:"
          - "`sudo usermod -aG proyecto_web testuser`"
          - "`sudo usermod -aG proyecto_web colaborador`"
          - "6. Verificar que todo está correcto:"
          - "`ls -ld /proyectos/web`"
          - "**Escenario 2: Configurando un Usuario de Servicio**"
          - "Para servicios que necesitan su propio usuario con acceso limitado:"
          - "1. Crear un usuario de sistema sin home y sin login:"
          - "`sudo useradd -r -s /sbin/nologin -c \"Usuario del servidor web\" webserver`"
          - "2. Configurar permisos apropiados para directorios de servicio:"
          - "`sudo mkdir -p /var/www/html`"
          - "`sudo chown webserver:webserver /var/www/html`"
          - "**Mejores Prácticas de Seguridad**"
          - "1. **Política de Privilegio Mínimo**: Concede apenas los privilegios necesarios para cada usuario o grupo."
          - "2. **Usa sudo en vez de root directo**: Configura sudo para permitir acciones administrativas controladas."
          - "3. **Revisa Regularmente**: Audita las cuentas de usuarios y grupos para remover cuentas inactivas o innecesarias."
          - "4. **Implementa Expiración**: Configura expiración de contraseñas para forzar actualizaciones regulares."
          - "5. **Monitoreo**: Mantén logs de autenticación y configura alertas para fallas de login."
          - "6. **Desactivar en lugar de Remover**: Para empleados que se van, bloquea las cuentas en vez de excluirlas inmediatamente."
          - "**Automatizando Administración de Usuarios**"
          - "Para ambientes mayores, considera herramientas como:"
          - "- **Scripts Shell**: Para creación en masa de usuarios"
          - "- **Ansible, Puppet, Chef**: Para administración de configuración"
          - "- **LDAP o Active Directory**: Para autenticación centralizada"
          - "- **SSSD, Kerberos, FreeIPA**: Para implementaciones más complejas"
        tips:
          - type: "info"
            title: "Gestionando Acceso Temporal"
            content: "Para accesos temporales, usa 'sudo usermod -e YYYY-MM-DD username' para definir una fecha de expiración de la cuenta. La cuenta será automáticamente deshabilitada después de esa fecha."
          - type: "warning"
            title: "Evita Edición Manual de archivos"
            content: "Nunca edites manualmente /etc/passwd, /etc/shadow o /etc/group. Usa siempre las herramientas apropiadas (useradd, usermod, groupadd, etc.) para evitar inconsistencias o problemas de seguridad."
          - type: "tip"
            title: "Documentación"
            content: "Mantén documentación actualizada sobre políticas de usuarios, grupos y sus finalidades. En ambientes empresariales, integra con sistemas de administración de identidades y aprovisionamiento automático."
        validation:
          - command: "grep -q proyecto_web /etc/group && echo 'ok'"
            expectedOutput: "ok"
            errorMessage: "El grupo proyecto_web no fue creado correctamente."
          - command: "id webserver &> /dev/null && echo 'ok' || echo 'usuario no existe'"
            expectedOutput: "ok"
            errorMessage: "El usuario de servicio webserver no fue creado correctamente."
