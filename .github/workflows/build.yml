name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0  # Fetch all history for tags and branches

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: './go.mod'
          check-latest: true

      - name: Determine version
        id: version
        run: |
          # Check if this is a tag build
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # If not a tag, use the latest tag + commit hash
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
            LATEST_TAG=${LATEST_TAG#v}  # Remove 'v' prefix if present
            COMMIT_SHORT=$(git rev-parse --short HEAD)
            VERSION="${LATEST_TAG}-dev.${COMMIT_SHORT}"
          fi
          
          echo "Determined version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set environment variables
        run: |
          # essa variavel de ambiente sera usada para injetar no ldflags do goreleaser
          echo "GOVERSION=$(go version | cut -d' ' -f3)" >> $GITHUB_ENV

      - uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - uses: anchore/sbom-action/download-syft@e11c554f704a0b820cbf8c51673f6945e0731532 # v0.20.0

      - uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          version: latest
          args: release --clean --snapshot --skip=sign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}

      - name: Check Binary
        run: |
          ./dist/girus-cli-linux-amd64 help
          ./dist/girus-cli-linux-amd64 version


  build-docker:
    runs-on: ubuntu-latest
    needs: build
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0  # Fetch all history for tags and branches

      - name: Determine version
        id: version
        run: |
          # Check if this is a tag build
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # If not a tag, use the latest tag + commit hash
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
            LATEST_TAG=${LATEST_TAG#v}  # Remove 'v' prefix if present
            COMMIT_SHORT=$(git rev-parse --short HEAD)
            VERSION="${LATEST_TAG}-dev.${COMMIT_SHORT}"
          fi
          
          echo "Determined version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0
        with:
          driver-opts: network=host

      - name: Build and push to local registry
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: localhost:5000/girus/girus-cli:latest
          build-args: |
            VERSION=${{ env.VERSION }}

      - name: Inspect
        run: |
          docker run localhost:5000/girus/girus-cli:latest version
