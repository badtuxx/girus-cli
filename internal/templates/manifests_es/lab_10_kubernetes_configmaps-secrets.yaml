apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-configmaps-secrets-lab-es
  namespace: girus
  labels:
    app: girus-lab-template
data:
  lab.yaml: |
    name: kubernetes-configmaps-secrets-es
    title: "ConfigMaps e Secrets no Kubernetes"
    description: "Aprenda a gerenciar configurações e segredos no Kubernetes usando ConfigMaps e Secrets. Este laboratório guiado explora boas práticas de gerenciamento de configurações e dados sensíveis em aplicações containerizadas."
    duration: 35m
    image: "linuxtips/girus-devops:0.1"
    privileged: true
    tasks:
      - name: "Trabalhando com ConfigMaps"
        description: "Aprenda a criar e usar ConfigMaps no Kubernetes."
        steps:
          - description: "Crie um ConfigMap a partir de um arquivo"
            command: "echo -e 'DB_HOST=localhost\nDB_PORT=5432' > config.env && kubectl create configmap app-config --from-env-file=config.env"
            expectedOutput: "configmap/app-config created"
            hint: "Use o comando kubectl create configmap com --from-env-file"

          - description: "Verifique o ConfigMap criado"
            command: "kubectl get configmap app-config -o yaml"
            expectedOutput: "app-config"
            hint: "Use o comando kubectl get configmap com -o yaml"

          - description: "Crie um pod usando o ConfigMap"
            command: "kubectl run config-pod --image=nginx --overrides='{\"spec\":{\"containers\":[{\"name\":\"nginx\",\"image\":\"nginx\",\"envFrom\":[{\"configMapRef\":{\"name\":\"app-config\"}}]}]}}'"
            expectedOutput: "pod/config-pod created"
            hint: "Use o comando kubectl run com --overrides para montar o ConfigMap"

      - name: "Gerenciando Secrets"
        description: "Aprenda a criar e usar Secrets no Kubernetes."
        steps:
          - description: "Crie um Secret para credenciais"
            command: "kubectl create secret generic db-credentials --from-literal=username=admin --from-literal=password=secret123"
            expectedOutput: "secret/db-credentials created"
            hint: "Use o comando kubectl create secret generic"

          - description: "Verifique o Secret criado"
            command: "kubectl get secret db-credentials -o yaml"
            expectedOutput: "db-credentials"
            hint: "Use o comando kubectl get secret com -o yaml"

          - description: "Crie um pod usando o Secret"
            command: "kubectl run secret-pod --image=nginx --overrides='{\"spec\":{\"containers\":[{\"name\":\"nginx\",\"image\":\"nginx\",\"env\":[{\"name\":\"DB_USER\",\"valueFrom\":{\"secretKeyRef\":{\"name\":\"db-credentials\",\"key\":\"username\"}}},{\"name\":\"DB_PASS\",\"valueFrom\":{\"secretKeyRef\":{\"name\":\"db-credentials\",\"key\":\"password\"}}}]}}'"
            expectedOutput: "pod/secret-pod created"
            hint: "Use o comando kubectl run com --overrides para montar o Secret"

      - name: "Montando ConfigMaps e Secrets como Volumes"
        description: "Implemente ConfigMaps e Secrets como volumes em pods."
        steps:
          - description: "Crie um ConfigMap para configuração"
            command: "echo -e 'server {\n    listen 80;\n    server_name localhost;\n}' > nginx.conf && kubectl create configmap nginx-config --from-file=nginx.conf"
            expectedOutput: "configmap/nginx-config created"
            hint: "Use o comando kubectl create configmap com --from-file"

          - description: "Crie um pod montando o ConfigMap como volume"
            command: "kubectl run nginx-config-pod --image=nginx --overrides='{\"spec\":{\"containers\":[{\"name\":\"nginx\",\"image\":\"nginx\",\"volumeMounts\":[{\"name\":\"config-volume\",\"mountPath\":\"/etc/nginx/conf.d\"}],\"volumes\":[{\"name\":\"config-volume\",\"configMap\":{\"name\":\"nginx-config\"}}]}]}}'"
            expectedOutput: "pod/nginx-config-pod created"
            hint: "Use o comando kubectl run com --overrides para montar o ConfigMap como volume"

          - description: "Verifique a montagem do volume"
            command: "kubectl exec nginx-config-pod -- ls -l /etc/nginx/conf.d"
            expectedOutput: "nginx.conf"
            hint: "Use o comando kubectl exec para verificar o conteúdo do diretório"
